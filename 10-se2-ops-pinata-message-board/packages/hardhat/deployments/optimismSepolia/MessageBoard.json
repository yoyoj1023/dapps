{
  "address": "0xe4aa5B7bDe24a0a30E07cDa4Ce4f96C053C1FF56",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isPaused",
          "type": "bool"
        }
      ],
      "name": "BoardStatusChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "messageId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "ipfsCid",
          "type": "string"
        }
      ],
      "name": "MessagePosted",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "getAllMessages",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "ipfsCid",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "messageId",
              "type": "uint256"
            }
          ],
          "internalType": "struct MessageBoard.Message[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_count",
          "type": "uint256"
        }
      ],
      "name": "getLatestMessages",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "ipfsCid",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "messageId",
              "type": "uint256"
            }
          ],
          "internalType": "struct MessageBoard.Message[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_messageId",
          "type": "uint256"
        }
      ],
      "name": "getMessage",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "ipfsCid",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "messageId",
              "type": "uint256"
            }
          ],
          "internalType": "struct MessageBoard.Message",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalMessages",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getUserMessageCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getUserMessages",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "ipfsCid",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "messageId",
              "type": "uint256"
            }
          ],
          "internalType": "struct MessageBoard.Message[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "messages",
      "outputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "ipfsCid",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "messageId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_ipfsCid",
          "type": "string"
        }
      ],
      "name": "postMessage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_paused",
          "type": "bool"
        }
      ],
      "name": "setPaused",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userMessageCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x2e10cbbe7d22240e2e21af09a0aaf492da016f9da4576f0083833707c520fba8",
  "receipt": {
    "to": null,
    "from": "0xdb4101e7f5E2cC0e1A749092ff5287e3d36A5df6",
    "contractAddress": "0xe4aa5B7bDe24a0a30E07cDa4Ce4f96C053C1FF56",
    "transactionIndex": 2,
    "gasUsed": "1103148",
    "logsBloom": "0x
    "blockHash": "0x4b735516d53eeca3ba2ade59ac0a103f09a6351ab8faf6dc66d71a7c668ea3fb",
    "transactionHash": "0x2e10cbbe7d22240e2e21af09a0aaf492da016f9da4576f0083833707c520fba8",
    "logs": [],
    "blockNumber": 32976022,
    "cumulativeGasUsed": "1268369",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "a6eb95f713f1833cce8be2451d9be40b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isPaused\",\"type\":\"bool\"}],\"name\":\"BoardStatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"messageId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"ipfsCid\",\"type\":\"string\"}],\"name\":\"MessagePosted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getAllMessages\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"ipfsCid\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"messageId\",\"type\":\"uint256\"}],\"internalType\":\"struct MessageBoard.Message[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_count\",\"type\":\"uint256\"}],\"name\":\"getLatestMessages\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"ipfsCid\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"messageId\",\"type\":\"uint256\"}],\"internalType\":\"struct MessageBoard.Message[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_messageId\",\"type\":\"uint256\"}],\"name\":\"getMessage\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"ipfsCid\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"messageId\",\"type\":\"uint256\"}],\"internalType\":\"struct MessageBoard.Message\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalMessages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserMessageCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserMessages\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"ipfsCid\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"messageId\",\"type\":\"uint256\"}],\"internalType\":\"struct MessageBoard.Message[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"messages\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"ipfsCid\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"messageId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_ipfsCid\",\"type\":\"string\"}],\"name\":\"postMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_paused\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userMessageCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Your Name\",\"details\":\"\\u4e00\\u500b\\u57fa\\u65bc IPFS \\u7684\\u53bb\\u4e2d\\u5fc3\\u5316\\u7559\\u8a00\\u677f\\u667a\\u80fd\\u5408\\u7d04\",\"events\":{\"BoardStatusChanged(bool)\":{\"details\":\"\\u7576\\u7559\\u8a00\\u677f\\u72c0\\u614b\\u6539\\u8b8a\\u6642\\u89f8\\u767c\"},\"MessagePosted(uint256,address,uint256,string)\":{\"details\":\"\\u7576\\u65b0\\u7559\\u8a00\\u767c\\u5e03\\u6642\\u89f8\\u767c\"}},\"kind\":\"dev\",\"methods\":{\"getAllMessages()\":{\"details\":\"\\u7372\\u53d6\\u6240\\u6709\\u7559\\u8a00\",\"returns\":{\"_0\":\"\\u6240\\u6709\\u7559\\u8a00\\u7684\\u9663\\u5217\"}},\"getLatestMessages(uint256)\":{\"details\":\"\\u7372\\u53d6\\u6700\\u65b0\\u7684 N \\u5247\\u7559\\u8a00\",\"params\":{\"_count\":\"\\u8981\\u7372\\u53d6\\u7684\\u7559\\u8a00\\u6578\\u91cf\"},\"returns\":{\"_0\":\"\\u6700\\u65b0\\u7684\\u7559\\u8a00\\u9663\\u5217\"}},\"getMessage(uint256)\":{\"details\":\"\\u7372\\u53d6\\u7279\\u5b9a\\u7559\\u8a00\",\"params\":{\"_messageId\":\"\\u7559\\u8a00 ID\"},\"returns\":{\"_0\":\"\\u6307\\u5b9a\\u7684\\u7559\\u8a00\"}},\"getTotalMessages()\":{\"details\":\"\\u7372\\u53d6\\u7559\\u8a00\\u7e3d\\u6578\",\"returns\":{\"_0\":\"\\u7559\\u8a00\\u7e3d\\u6578\"}},\"getUserMessageCount(address)\":{\"details\":\"\\u7372\\u53d6\\u4f7f\\u7528\\u8005\\u7559\\u8a00\\u6578\\u91cf\",\"params\":{\"_user\":\"\\u4f7f\\u7528\\u8005\\u5730\\u5740\"},\"returns\":{\"_0\":\"\\u8a72\\u4f7f\\u7528\\u8005\\u7684\\u7559\\u8a00\\u6578\\u91cf\"}},\"getUserMessages(address)\":{\"details\":\"\\u7372\\u53d6\\u7279\\u5b9a\\u4f7f\\u7528\\u8005\\u7684\\u7559\\u8a00\",\"params\":{\"_user\":\"\\u4f7f\\u7528\\u8005\\u5730\\u5740\"},\"returns\":{\"_0\":\"\\u8a72\\u4f7f\\u7528\\u8005\\u7684\\u6240\\u6709\\u7559\\u8a00\"}},\"postMessage(string)\":{\"details\":\"\\u767c\\u5e03\\u65b0\\u7559\\u8a00\",\"params\":{\"_ipfsCid\":\"IPFS \\u5167\\u5bb9\\u8b58\\u5225\\u78bc\"}},\"setPaused(bool)\":{\"details\":\"\\u66ab\\u505c\\u6216\\u6062\\u5fa9\\u7559\\u8a00\\u677f\\uff08\\u50c5\\u64c1\\u6709\\u8005\\uff09\",\"params\":{\"_paused\":\"\\u662f\\u5426\\u66ab\\u505c\"}},\"transferOwnership(address)\":{\"details\":\"\\u8f49\\u79fb\\u64c1\\u6709\\u6b0a\\uff08\\u50c5\\u64c1\\u6709\\u8005\\uff09\",\"params\":{\"_newOwner\":\"\\u65b0\\u64c1\\u6709\\u8005\\u5730\\u5740\"}}},\"stateVariables\":{\"isPaused\":{\"details\":\"\\u7559\\u8a00\\u677f\\u662f\\u5426\\u66ab\\u505c\\uff08\\u7dca\\u6025\\u505c\\u6b62\\u529f\\u80fd\\uff09\"},\"messages\":{\"details\":\"\\u5132\\u5b58\\u6240\\u6709\\u7559\\u8a00\\u7684\\u9663\\u5217\"},\"owner\":{\"details\":\"\\u5408\\u7d04\\u64c1\\u6709\\u8005\\uff08\\u53ef\\u9078\\u529f\\u80fd\\uff09\"},\"userMessageCount\":{\"details\":\"\\u8ffd\\u8e64\\u6bcf\\u500b\\u5730\\u5740\\u767c\\u9001\\u7684\\u7559\\u8a00\\u6578\\u91cf\"}},\"title\":\"MessageBoard\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MessageBoard.sol\":\"MessageBoard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MessageBoard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.19;\\r\\n\\r\\n/**\\r\\n * @title MessageBoard\\r\\n * @dev \\u4e00\\u500b\\u57fa\\u65bc IPFS \\u7684\\u53bb\\u4e2d\\u5fc3\\u5316\\u7559\\u8a00\\u677f\\u667a\\u80fd\\u5408\\u7d04\\r\\n * @author Your Name\\r\\n */\\r\\ncontract MessageBoard {\\r\\n    // ==================== \\u8cc7\\u6599\\u7d50\\u69cb ====================\\r\\n\\r\\n    /**\\r\\n     * @dev \\u7559\\u8a00\\u7d50\\u69cb\\r\\n     */\\r\\n    struct Message {\\r\\n        address sender; // \\u767c\\u9001\\u8005\\u5730\\u5740\\r\\n        uint256 timestamp; // \\u767c\\u9001\\u6642\\u9593\\u6233\\r\\n        string ipfsCid; // IPFS \\u5167\\u5bb9\\u8b58\\u5225\\u78bc\\r\\n        uint256 messageId; // \\u7559\\u8a00\\u552f\\u4e00\\u8b58\\u5225\\u78bc\\r\\n    }\\r\\n\\r\\n    // ==================== \\u72c0\\u614b\\u8b8a\\u6578 ====================\\r\\n\\r\\n    /// @dev \\u5132\\u5b58\\u6240\\u6709\\u7559\\u8a00\\u7684\\u9663\\u5217\\r\\n    Message[] public messages;\\r\\n\\r\\n    /// @dev \\u8ffd\\u8e64\\u6bcf\\u500b\\u5730\\u5740\\u767c\\u9001\\u7684\\u7559\\u8a00\\u6578\\u91cf\\r\\n    mapping(address => uint256) public userMessageCount;\\r\\n\\r\\n    /// @dev \\u5408\\u7d04\\u64c1\\u6709\\u8005\\uff08\\u53ef\\u9078\\u529f\\u80fd\\uff09\\r\\n    address public owner;\\r\\n\\r\\n    /// @dev \\u7559\\u8a00\\u677f\\u662f\\u5426\\u66ab\\u505c\\uff08\\u7dca\\u6025\\u505c\\u6b62\\u529f\\u80fd\\uff09\\r\\n    bool public isPaused;\\r\\n\\r\\n    // ==================== \\u4e8b\\u4ef6 ====================\\r\\n\\r\\n    /**\\r\\n     * @dev \\u7576\\u65b0\\u7559\\u8a00\\u767c\\u5e03\\u6642\\u89f8\\u767c\\r\\n     */\\r\\n    event MessagePosted(uint256 indexed messageId, address indexed sender, uint256 timestamp, string ipfsCid);\\r\\n\\r\\n    /**\\r\\n     * @dev \\u7576\\u7559\\u8a00\\u677f\\u72c0\\u614b\\u6539\\u8b8a\\u6642\\u89f8\\u767c\\r\\n     */\\r\\n    event BoardStatusChanged(bool isPaused);\\r\\n\\r\\n    // ==================== \\u4fee\\u98fe\\u7b26 ====================\\r\\n\\r\\n    /// @dev \\u6aa2\\u67e5\\u7559\\u8a00\\u677f\\u662f\\u5426\\u672a\\u66ab\\u505c\\r\\n    modifier whenNotPaused() {\\r\\n        require(!isPaused, \\\"MessageBoard: Contract is paused\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /// @dev \\u6aa2\\u67e5\\u662f\\u5426\\u70ba\\u5408\\u7d04\\u64c1\\u6709\\u8005\\r\\n    modifier onlyOwner() {\\r\\n        require(msg.sender == owner, \\\"MessageBoard: Not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /// @dev \\u6aa2\\u67e5 CID \\u662f\\u5426\\u6709\\u6548\\r\\n    modifier validCid(string calldata _ipfsCid) {\\r\\n        require(bytes(_ipfsCid).length > 0, \\\"MessageBoard: CID cannot be empty\\\");\\r\\n        require(bytes(_ipfsCid).length <= 100, \\\"MessageBoard: CID too long\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    // ==================== \\u5efa\\u69cb\\u51fd\\u5f0f ====================\\r\\n\\r\\n    constructor() {\\r\\n        owner = msg.sender;\\r\\n        isPaused = false;\\r\\n    }\\r\\n\\r\\n    // ==================== \\u4e3b\\u8981\\u529f\\u80fd ====================\\r\\n\\r\\n    /**\\r\\n     * @dev \\u767c\\u5e03\\u65b0\\u7559\\u8a00\\r\\n     * @param _ipfsCid IPFS \\u5167\\u5bb9\\u8b58\\u5225\\u78bc\\r\\n     */\\r\\n    function postMessage(string calldata _ipfsCid) external whenNotPaused validCid(_ipfsCid) {\\r\\n        uint256 messageId = messages.length;\\r\\n\\r\\n        // \\u5efa\\u7acb\\u65b0\\u7559\\u8a00\\r\\n        Message memory newMessage = Message({\\r\\n            sender: msg.sender,\\r\\n            timestamp: block.timestamp,\\r\\n            ipfsCid: _ipfsCid,\\r\\n            messageId: messageId\\r\\n        });\\r\\n\\r\\n        // \\u5132\\u5b58\\u7559\\u8a00\\r\\n        messages.push(newMessage);\\r\\n\\r\\n        // \\u66f4\\u65b0\\u4f7f\\u7528\\u8005\\u7559\\u8a00\\u8a08\\u6578\\r\\n        userMessageCount[msg.sender]++;\\r\\n\\r\\n        // \\u767c\\u51fa\\u4e8b\\u4ef6\\r\\n        emit MessagePosted(messageId, msg.sender, block.timestamp, _ipfsCid);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev \\u7372\\u53d6\\u6240\\u6709\\u7559\\u8a00\\r\\n     * @return \\u6240\\u6709\\u7559\\u8a00\\u7684\\u9663\\u5217\\r\\n     */\\r\\n    function getAllMessages() external view returns (Message[] memory) {\\r\\n        return messages;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev \\u7372\\u53d6\\u7279\\u5b9a\\u7559\\u8a00\\r\\n     * @param _messageId \\u7559\\u8a00 ID\\r\\n     * @return \\u6307\\u5b9a\\u7684\\u7559\\u8a00\\r\\n     */\\r\\n    function getMessage(uint256 _messageId) external view returns (Message memory) {\\r\\n        require(_messageId < messages.length, \\\"MessageBoard: Message does not exist\\\");\\r\\n        return messages[_messageId];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev \\u7372\\u53d6\\u6700\\u65b0\\u7684 N \\u5247\\u7559\\u8a00\\r\\n     * @param _count \\u8981\\u7372\\u53d6\\u7684\\u7559\\u8a00\\u6578\\u91cf\\r\\n     * @return \\u6700\\u65b0\\u7684\\u7559\\u8a00\\u9663\\u5217\\r\\n     */\\r\\n    function getLatestMessages(uint256 _count) external view returns (Message[] memory) {\\r\\n        uint256 totalMessages = messages.length;\\r\\n\\r\\n        if (totalMessages == 0) {\\r\\n            return new Message[](0);\\r\\n        }\\r\\n\\r\\n        uint256 returnCount = _count > totalMessages ? totalMessages : _count;\\r\\n        Message[] memory latestMessages = new Message[](returnCount);\\r\\n\\r\\n        for (uint256 i = 0; i < returnCount; i++) {\\r\\n            latestMessages[i] = messages[totalMessages - 1 - i];\\r\\n        }\\r\\n\\r\\n        return latestMessages;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev \\u7372\\u53d6\\u7279\\u5b9a\\u4f7f\\u7528\\u8005\\u7684\\u7559\\u8a00\\r\\n     * @param _user \\u4f7f\\u7528\\u8005\\u5730\\u5740\\r\\n     * @return \\u8a72\\u4f7f\\u7528\\u8005\\u7684\\u6240\\u6709\\u7559\\u8a00\\r\\n     */\\r\\n    // \\u9019\\u500b\\u51fd\\u6578\\u5f88\\u7cdf\\u7cd5\\uff0c\\u61c9\\u8a72\\u8981\\u7528 Mapping \\u4f86\\u505a\\r\\n    function getUserMessages(address _user) external view returns (Message[] memory) {\\r\\n        uint256 userMsgCount = userMessageCount[_user];\\r\\n\\r\\n        if (userMsgCount == 0) {\\r\\n            return new Message[](0);\\r\\n        }\\r\\n\\r\\n        Message[] memory userMessages = new Message[](userMsgCount);\\r\\n        uint256 currentIndex = 0;\\r\\n\\r\\n        for (uint256 i = 0; i < messages.length; i++) {\\r\\n            if (messages[i].sender == _user) {\\r\\n                userMessages[currentIndex] = messages[i];\\r\\n                currentIndex++;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return userMessages;\\r\\n    }\\r\\n\\r\\n    // ==================== \\u8cc7\\u8a0a\\u67e5\\u8a62 ====================\\r\\n\\r\\n    /**\\r\\n     * @dev \\u7372\\u53d6\\u7559\\u8a00\\u7e3d\\u6578\\r\\n     * @return \\u7559\\u8a00\\u7e3d\\u6578\\r\\n     */\\r\\n    function getTotalMessages() external view returns (uint256) {\\r\\n        return messages.length;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev \\u7372\\u53d6\\u4f7f\\u7528\\u8005\\u7559\\u8a00\\u6578\\u91cf\\r\\n     * @param _user \\u4f7f\\u7528\\u8005\\u5730\\u5740\\r\\n     * @return \\u8a72\\u4f7f\\u7528\\u8005\\u7684\\u7559\\u8a00\\u6578\\u91cf\\r\\n     */\\r\\n    function getUserMessageCount(address _user) external view returns (uint256) {\\r\\n        return userMessageCount[_user];\\r\\n    }\\r\\n\\r\\n    // ==================== \\u7ba1\\u7406\\u529f\\u80fd ====================\\r\\n\\r\\n    /**\\r\\n     * @dev \\u66ab\\u505c\\u6216\\u6062\\u5fa9\\u7559\\u8a00\\u677f\\uff08\\u50c5\\u64c1\\u6709\\u8005\\uff09\\r\\n     * @param _paused \\u662f\\u5426\\u66ab\\u505c\\r\\n     */\\r\\n    function setPaused(bool _paused) external onlyOwner {\\r\\n        isPaused = _paused;\\r\\n        emit BoardStatusChanged(_paused);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev \\u8f49\\u79fb\\u64c1\\u6709\\u6b0a\\uff08\\u50c5\\u64c1\\u6709\\u8005\\uff09\\r\\n     * @param _newOwner \\u65b0\\u64c1\\u6709\\u8005\\u5730\\u5740\\r\\n     */\\r\\n    function transferOwnership(address _newOwner) external onlyOwner {\\r\\n        require(_newOwner != address(0), \\\"MessageBoard: New owner cannot be zero address\\\");\\r\\n        owner = _newOwner;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x004f7ec5c0679139aa2b98f94b38406c2f2684f65d50a2fc72fab23f902c762c\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600280546001600160a81b0319163360ff60a01b1916179055611295806100396000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636630f88f1161008c57806398d63d3d1161006657806398d63d3d146101e35780639e19a1ca146101f6578063b187bd2614610209578063f2fde38b1461022d57600080fd5b80636630f88f1461018557806386f79edb146101985780638da5cb5b146101b857600080fd5b80630d80fefd146100d4578063147e91081461010057806316c38b3c146101125780632b659bfb1461012757806353f5e380146101505780635a506ebc14610165575b600080fd5b6100e76100e2366004610e57565b610240565b6040516100f79493929190610eb6565b60405180910390f35b6000545b6040519081526020016100f7565b610125610120366004610eee565b61030f565b005b610104610135366004610f17565b6001600160a01b031660009081526001602052604090205490565b6101586103c6565b6040516100f79190610f85565b610104610173366004610f17565b60016020526000908152604090205481565b610125610193366004610fe7565b6104e1565b6101ab6101a6366004610e57565b610780565b6040516100f79190611059565b6002546101cb906001600160a01b031681565b6040516001600160a01b0390911681526020016100f7565b6101586101f1366004610f17565b6108ed565b610158610204366004610e57565b610b33565b60025461021d90600160a01b900460ff1681565b60405190151581526020016100f7565b61012561023b366004610f17565b610d3d565b6000818154811061025057600080fd5b60009182526020909120600490910201805460018201546002830180546001600160a01b0390931694509092916102869061106c565b80601f01602080910402602001604051908101604052809291908181526020018280546102b29061106c565b80156102ff5780601f106102d4576101008083540402835291602001916102ff565b820191906000526020600020905b8154815290600101906020018083116102e257829003601f168201915b5050505050908060030154905084565b6002546001600160a01b0316331461036e5760405162461bcd60e51b815260206004820152601b60248201527f4d657373616765426f6172643a204e6f7420746865206f776e6572000000000060448201526064015b60405180910390fd5b60028054821515600160a01b0260ff60a01b199091161790556040517fbee07546c36eb266a2b234993e323e55d21f203b392c90914d1ed3c79879085f906103bb90831515815260200190565b60405180910390a150565b60606000805480602002602001604051908101604052809291908181526020016000905b828210156104d8576000848152602090819020604080516080810182526004860290920180546001600160a01b031683526001810154938301939093526002830180549293929184019161043d9061106c565b80601f01602080910402602001604051908101604052809291908181526020018280546104699061106c565b80156104b65780601f1061048b576101008083540402835291602001916104b6565b820191906000526020600020905b81548152906001019060200180831161049957829003601f168201915b50505050508152602001600382015481525050815260200190600101906103ea565b50505050905090565b600254600160a01b900460ff161561053b5760405162461bcd60e51b815260206004820181905260248201527f4d657373616765426f6172643a20436f6e7472616374206973207061757365646044820152606401610365565b8181806105945760405162461bcd60e51b815260206004820152602160248201527f4d657373616765426f6172643a204349442063616e6e6f7420626520656d70746044820152607960f81b6064820152608401610365565b60648111156105e55760405162461bcd60e51b815260206004820152601a60248201527f4d657373616765426f6172643a2043494420746f6f206c6f6e670000000000006044820152606401610365565b60008080549050905060006040518060800160405280336001600160a01b0316815260200142815260200187878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509385525050506020918201859052805460018101825590805282517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563600490920291820180546001600160a01b0319166001600160a01b03909216919091178155918301517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e564820155604083015192935083927f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56590910190610704908261110b565b506060919091015160039091015533600090815260016020526040812080549161072d836111e1565b9190505550336001600160a01b0316827f90d8b108c6bb7f3b9f7f643633dd5523eb7185920f50d30676e4329f536c4daf428989604051610770939291906111fa565b60405180910390a3505050505050565b610788610e26565b60005482106107e55760405162461bcd60e51b8152602060048201526024808201527f4d657373616765426f6172643a204d65737361676520646f6573206e6f7420656044820152631e1a5cdd60e21b6064820152608401610365565b600082815481106107f8576107f8611230565b90600052602060002090600402016040518060800160405290816000820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016001820154815260200160028201805461085a9061106c565b80601f01602080910402602001604051908101604052809291908181526020018280546108869061106c565b80156108d35780601f106108a8576101008083540402835291602001916108d3565b820191906000526020600020905b8154815290600101906020018083116108b657829003601f168201915b505050505081526020016003820154815250509050919050565b6001600160a01b038116600090815260016020526040812054606091819003610949576040805160008082526020820190925290610941565b61092e610e26565b8152602001906001900390816109265790505b509392505050565b60008167ffffffffffffffff811115610964576109646110a6565b60405190808252806020026020018201604052801561099d57816020015b61098a610e26565b8152602001906001900390816109825790505b5090506000805b600054811015610b2957856001600160a01b0316600082815481106109cb576109cb611230565b60009182526020909120600490910201546001600160a01b031603610b1757600081815481106109fd576109fd611230565b90600052602060002090600402016040518060800160405290816000820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b0316815260200160018201548152602001600282018054610a5f9061106c565b80601f0160208091040260200160405190810160405280929190818152602001828054610a8b9061106c565b8015610ad85780601f10610aad57610100808354040283529160200191610ad8565b820191906000526020600020905b815481529060010190602001808311610abb57829003601f168201915b50505050508152602001600382015481525050838381518110610afd57610afd611230565b60200260200101819052508180610b13906111e1565b9250505b80610b21816111e1565b9150506109a4565b5090949350505050565b60008054606091819003610b79576040805160008082526020820190925290610941565b610b5f610e26565b815260200190600190039081610b57579050509392505050565b6000818411610b885783610b8a565b815b905060008167ffffffffffffffff811115610ba757610ba76110a6565b604051908082528060200260200182016040528015610be057816020015b610bcd610e26565b815260200190600190039081610bc55790505b50905060005b82811015610d3457600081610bfc600187611246565b610c069190611246565b81548110610c1657610c16611230565b90600052602060002090600402016040518060800160405290816000820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b0316815260200160018201548152602001600282018054610c789061106c565b80601f0160208091040260200160405190810160405280929190818152602001828054610ca49061106c565b8015610cf15780601f10610cc657610100808354040283529160200191610cf1565b820191906000526020600020905b815481529060010190602001808311610cd457829003601f168201915b50505050508152602001600382015481525050828281518110610d1657610d16611230565b60200260200101819052508080610d2c906111e1565b915050610be6565b50949350505050565b6002546001600160a01b03163314610d975760405162461bcd60e51b815260206004820152601b60248201527f4d657373616765426f6172643a204e6f7420746865206f776e657200000000006044820152606401610365565b6001600160a01b038116610e045760405162461bcd60e51b815260206004820152602e60248201527f4d657373616765426f6172643a204e6577206f776e65722063616e6e6f74206260448201526d65207a65726f206164647265737360901b6064820152608401610365565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b604051806080016040528060006001600160a01b031681526020016000815260200160608152602001600081525090565b600060208284031215610e6957600080fd5b5035919050565b6000815180845260005b81811015610e9657602081850181015186830182015201610e7a565b506000602082860101526020601f19601f83011685010191505092915050565b60018060a01b0385168152836020820152608060408201526000610edd6080830185610e70565b905082606083015295945050505050565b600060208284031215610f0057600080fd5b81358015158114610f1057600080fd5b9392505050565b600060208284031215610f2957600080fd5b81356001600160a01b0381168114610f1057600080fd5b60018060a01b038151168252602081015160208301526000604082015160806040850152610f716080850182610e70565b606093840151949093019390935250919050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610fda57603f19888603018452610fc8858351610f40565b94509285019290850190600101610fac565b5092979650505050505050565b60008060208385031215610ffa57600080fd5b823567ffffffffffffffff8082111561101257600080fd5b818501915085601f83011261102657600080fd5b81358181111561103557600080fd5b86602082850101111561104757600080fd5b60209290920196919550909350505050565b602081526000610f106020830184610f40565b600181811c9082168061108057607f821691505b6020821081036110a057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b601f82111561110657600081815260208120601f850160051c810160208610156110e35750805b601f850160051c820191505b81811015611102578281556001016110ef565b5050505b505050565b815167ffffffffffffffff811115611125576111256110a6565b61113981611133845461106c565b846110bc565b602080601f83116001811461116e57600084156111565750858301515b600019600386901b1c1916600185901b178555611102565b600085815260208120601f198616915b8281101561119d5788860151825594840194600190910190840161117e565b50858210156111bb5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b6000600182016111f3576111f36111cb565b5060010190565b83815260406020820152816040820152818360608301376000818301606090810191909152601f909201601f1916010192915050565b634e487b7160e01b600052603260045260246000fd5b81810381811115611259576112596111cb565b9291505056fea2646970667358221220b79f3bd2d428653e802ea446899a78a8d1494be76a5bc952c831dd53aa16c9fb64736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636630f88f1161008c57806398d63d3d1161006657806398d63d3d146101e35780639e19a1ca146101f6578063b187bd2614610209578063f2fde38b1461022d57600080fd5b80636630f88f1461018557806386f79edb146101985780638da5cb5b146101b857600080fd5b80630d80fefd146100d4578063147e91081461010057806316c38b3c146101125780632b659bfb1461012757806353f5e380146101505780635a506ebc14610165575b600080fd5b6100e76100e2366004610e57565b610240565b6040516100f79493929190610eb6565b60405180910390f35b6000545b6040519081526020016100f7565b610125610120366004610eee565b61030f565b005b610104610135366004610f17565b6001600160a01b031660009081526001602052604090205490565b6101586103c6565b6040516100f79190610f85565b610104610173366004610f17565b60016020526000908152604090205481565b610125610193366004610fe7565b6104e1565b6101ab6101a6366004610e57565b610780565b6040516100f79190611059565b6002546101cb906001600160a01b031681565b6040516001600160a01b0390911681526020016100f7565b6101586101f1366004610f17565b6108ed565b610158610204366004610e57565b610b33565b60025461021d90600160a01b900460ff1681565b60405190151581526020016100f7565b61012561023b366004610f17565b610d3d565b6000818154811061025057600080fd5b60009182526020909120600490910201805460018201546002830180546001600160a01b0390931694509092916102869061106c565b80601f01602080910402602001604051908101604052809291908181526020018280546102b29061106c565b80156102ff5780601f106102d4576101008083540402835291602001916102ff565b820191906000526020600020905b8154815290600101906020018083116102e257829003601f168201915b5050505050908060030154905084565b6002546001600160a01b0316331461036e5760405162461bcd60e51b815260206004820152601b60248201527f4d657373616765426f6172643a204e6f7420746865206f776e6572000000000060448201526064015b60405180910390fd5b60028054821515600160a01b0260ff60a01b199091161790556040517fbee07546c36eb266a2b234993e323e55d21f203b392c90914d1ed3c79879085f906103bb90831515815260200190565b60405180910390a150565b60606000805480602002602001604051908101604052809291908181526020016000905b828210156104d8576000848152602090819020604080516080810182526004860290920180546001600160a01b031683526001810154938301939093526002830180549293929184019161043d9061106c565b80601f01602080910402602001604051908101604052809291908181526020018280546104699061106c565b80156104b65780601f1061048b576101008083540402835291602001916104b6565b820191906000526020600020905b81548152906001019060200180831161049957829003601f168201915b50505050508152602001600382015481525050815260200190600101906103ea565b50505050905090565b600254600160a01b900460ff161561053b5760405162461bcd60e51b815260206004820181905260248201527f4d657373616765426f6172643a20436f6e7472616374206973207061757365646044820152606401610365565b8181806105945760405162461bcd60e51b815260206004820152602160248201527f4d657373616765426f6172643a204349442063616e6e6f7420626520656d70746044820152607960f81b6064820152608401610365565b60648111156105e55760405162461bcd60e51b815260206004820152601a60248201527f4d657373616765426f6172643a2043494420746f6f206c6f6e670000000000006044820152606401610365565b60008080549050905060006040518060800160405280336001600160a01b0316815260200142815260200187878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509385525050506020918201859052805460018101825590805282517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563600490920291820180546001600160a01b0319166001600160a01b03909216919091178155918301517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e564820155604083015192935083927f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56590910190610704908261110b565b506060919091015160039091015533600090815260016020526040812080549161072d836111e1565b9190505550336001600160a01b0316827f90d8b108c6bb7f3b9f7f643633dd5523eb7185920f50d30676e4329f536c4daf428989604051610770939291906111fa565b60405180910390a3505050505050565b610788610e26565b60005482106107e55760405162461bcd60e51b8152602060048201526024808201527f4d657373616765426f6172643a204d65737361676520646f6573206e6f7420656044820152631e1a5cdd60e21b6064820152608401610365565b600082815481106107f8576107f8611230565b90600052602060002090600402016040518060800160405290816000820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016001820154815260200160028201805461085a9061106c565b80601f01602080910402602001604051908101604052809291908181526020018280546108869061106c565b80156108d35780601f106108a8576101008083540402835291602001916108d3565b820191906000526020600020905b8154815290600101906020018083116108b657829003601f168201915b505050505081526020016003820154815250509050919050565b6001600160a01b038116600090815260016020526040812054606091819003610949576040805160008082526020820190925290610941565b61092e610e26565b8152602001906001900390816109265790505b509392505050565b60008167ffffffffffffffff811115610964576109646110a6565b60405190808252806020026020018201604052801561099d57816020015b61098a610e26565b8152602001906001900390816109825790505b5090506000805b600054811015610b2957856001600160a01b0316600082815481106109cb576109cb611230565b60009182526020909120600490910201546001600160a01b031603610b1757600081815481106109fd576109fd611230565b90600052602060002090600402016040518060800160405290816000820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b0316815260200160018201548152602001600282018054610a5f9061106c565b80601f0160208091040260200160405190810160405280929190818152602001828054610a8b9061106c565b8015610ad85780601f10610aad57610100808354040283529160200191610ad8565b820191906000526020600020905b815481529060010190602001808311610abb57829003601f168201915b50505050508152602001600382015481525050838381518110610afd57610afd611230565b60200260200101819052508180610b13906111e1565b9250505b80610b21816111e1565b9150506109a4565b5090949350505050565b60008054606091819003610b79576040805160008082526020820190925290610941565b610b5f610e26565b815260200190600190039081610b57579050509392505050565b6000818411610b885783610b8a565b815b905060008167ffffffffffffffff811115610ba757610ba76110a6565b604051908082528060200260200182016040528015610be057816020015b610bcd610e26565b815260200190600190039081610bc55790505b50905060005b82811015610d3457600081610bfc600187611246565b610c069190611246565b81548110610c1657610c16611230565b90600052602060002090600402016040518060800160405290816000820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b0316815260200160018201548152602001600282018054610c789061106c565b80601f0160208091040260200160405190810160405280929190818152602001828054610ca49061106c565b8015610cf15780601f10610cc657610100808354040283529160200191610cf1565b820191906000526020600020905b815481529060010190602001808311610cd457829003601f168201915b50505050508152602001600382015481525050828281518110610d1657610d16611230565b60200260200101819052508080610d2c906111e1565b915050610be6565b50949350505050565b6002546001600160a01b03163314610d975760405162461bcd60e51b815260206004820152601b60248201527f4d657373616765426f6172643a204e6f7420746865206f776e657200000000006044820152606401610365565b6001600160a01b038116610e045760405162461bcd60e51b815260206004820152602e60248201527f4d657373616765426f6172643a204e6577206f776e65722063616e6e6f74206260448201526d65207a65726f206164647265737360901b6064820152608401610365565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b604051806080016040528060006001600160a01b031681526020016000815260200160608152602001600081525090565b600060208284031215610e6957600080fd5b5035919050565b6000815180845260005b81811015610e9657602081850181015186830182015201610e7a565b506000602082860101526020601f19601f83011685010191505092915050565b60018060a01b0385168152836020820152608060408201526000610edd6080830185610e70565b905082606083015295945050505050565b600060208284031215610f0057600080fd5b81358015158114610f1057600080fd5b9392505050565b600060208284031215610f2957600080fd5b81356001600160a01b0381168114610f1057600080fd5b60018060a01b038151168252602081015160208301526000604082015160806040850152610f716080850182610e70565b606093840151949093019390935250919050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610fda57603f19888603018452610fc8858351610f40565b94509285019290850190600101610fac565b5092979650505050505050565b60008060208385031215610ffa57600080fd5b823567ffffffffffffffff8082111561101257600080fd5b818501915085601f83011261102657600080fd5b81358181111561103557600080fd5b86602082850101111561104757600080fd5b60209290920196919550909350505050565b602081526000610f106020830184610f40565b600181811c9082168061108057607f821691505b6020821081036110a057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b601f82111561110657600081815260208120601f850160051c810160208610156110e35750805b601f850160051c820191505b81811015611102578281556001016110ef565b5050505b505050565b815167ffffffffffffffff811115611125576111256110a6565b61113981611133845461106c565b846110bc565b602080601f83116001811461116e57600084156111565750858301515b600019600386901b1c1916600185901b178555611102565b600085815260208120601f198616915b8281101561119d5788860151825594840194600190910190840161117e565b50858210156111bb5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b6000600182016111f3576111f36111cb565b5060010190565b83815260406020820152816040820152818360608301376000818301606090810191909152601f909201601f1916010192915050565b634e487b7160e01b600052603260045260246000fd5b81810381811115611259576112596111cb565b9291505056fea2646970667358221220b79f3bd2d428653e802ea446899a78a8d1494be76a5bc952c831dd53aa16c9fb64736f6c63430008140033",
  "devdoc": {
    "author": "Your Name",
    "details": "一個基於 IPFS 的去中心化留言板智能合約",
    "events": {
      "BoardStatusChanged(bool)": {
        "details": "當留言板狀態改變時觸發"
      },
      "MessagePosted(uint256,address,uint256,string)": {
        "details": "當新留言發布時觸發"
      }
    },
    "kind": "dev",
    "methods": {
      "getAllMessages()": {
        "details": "獲取所有留言",
        "returns": {
          "_0": "所有留言的陣列"
        }
      },
      "getLatestMessages(uint256)": {
        "details": "獲取最新的 N 則留言",
        "params": {
          "_count": "要獲取的留言數量"
        },
        "returns": {
          "_0": "最新的留言陣列"
        }
      },
      "getMessage(uint256)": {
        "details": "獲取特定留言",
        "params": {
          "_messageId": "留言 ID"
        },
        "returns": {
          "_0": "指定的留言"
        }
      },
      "getTotalMessages()": {
        "details": "獲取留言總數",
        "returns": {
          "_0": "留言總數"
        }
      },
      "getUserMessageCount(address)": {
        "details": "獲取使用者留言數量",
        "params": {
          "_user": "使用者地址"
        },
        "returns": {
          "_0": "該使用者的留言數量"
        }
      },
      "getUserMessages(address)": {
        "details": "獲取特定使用者的留言",
        "params": {
          "_user": "使用者地址"
        },
        "returns": {
          "_0": "該使用者的所有留言"
        }
      },
      "postMessage(string)": {
        "details": "發布新留言",
        "params": {
          "_ipfsCid": "IPFS 內容識別碼"
        }
      },
      "setPaused(bool)": {
        "details": "暫停或恢復留言板（僅擁有者）",
        "params": {
          "_paused": "是否暫停"
        }
      },
      "transferOwnership(address)": {
        "details": "轉移擁有權（僅擁有者）",
        "params": {
          "_newOwner": "新擁有者地址"
        }
      }
    },
    "stateVariables": {
      "isPaused": {
        "details": "留言板是否暫停（緊急停止功能）"
      },
      "messages": {
        "details": "儲存所有留言的陣列"
      },
      "owner": {
        "details": "合約擁有者（可選功能）"
      },
      "userMessageCount": {
        "details": "追蹤每個地址發送的留言數量"
      }
    },
    "title": "MessageBoard",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 17,
        "contract": "contracts/MessageBoard.sol:MessageBoard",
        "label": "messages",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_struct(Message)12_storage)dyn_storage"
      },
      {
        "astId": 22,
        "contract": "contracts/MessageBoard.sol:MessageBoard",
        "label": "userMessageCount",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 25,
        "contract": "contracts/MessageBoard.sol:MessageBoard",
        "label": "owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 28,
        "contract": "contracts/MessageBoard.sol:MessageBoard",
        "label": "isPaused",
        "offset": 20,
        "slot": "2",
        "type": "t_bool"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Message)12_storage)dyn_storage": {
        "base": "t_struct(Message)12_storage",
        "encoding": "dynamic_array",
        "label": "struct MessageBoard.Message[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Message)12_storage": {
        "encoding": "inplace",
        "label": "struct MessageBoard.Message",
        "members": [
          {
            "astId": 5,
            "contract": "contracts/MessageBoard.sol:MessageBoard",
            "label": "sender",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 7,
            "contract": "contracts/MessageBoard.sol:MessageBoard",
            "label": "timestamp",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 9,
            "contract": "contracts/MessageBoard.sol:MessageBoard",
            "label": "ipfsCid",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 11,
            "contract": "contracts/MessageBoard.sol:MessageBoard",
            "label": "messageId",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}